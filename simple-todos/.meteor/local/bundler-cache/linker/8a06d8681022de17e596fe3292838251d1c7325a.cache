[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// client/template.main.js                                                                        //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\n                                                                                                  // 1\nTemplate.body.addContent((function() {                                                            // 2\n  var view = this;                                                                                // 3\n  return HTML.Raw('<div id=\"render-target\"></div>');                                              // 4\n}));                                                                                              // 5\nMeteor.startup(Template.body.renderToDocument);                                                   // 6\n                                                                                                  // 7\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.jsx\":[\"react\",\"meteor/meteor\",\"react-dom\",\"../imports/startup/accounts-config.js\",\"../imports/ui/App.jsx\",function(require){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// client/main.jsx                                                                                //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nvar _react = require('react');                                                                    // 1\n                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                     //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 2\n                                                                                                  //\nvar _reactDom = require('react-dom');                                                             // 3\n                                                                                                  //\nrequire('../imports/startup/accounts-config.js');                                                 // 5\n                                                                                                  //\nvar _App = require('../imports/ui/App.jsx');                                                      // 6\n                                                                                                  //\nvar _App2 = _interopRequireDefault(_App);                                                         //\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n                                                                                                  //\n_meteor.Meteor.startup(function () {                                                              // 8\n  (0, _reactDom.render)(_react2['default'].createElement(_App2['default'], null), document.getElementById('render-target'));\n});                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"imports\":{\"api\":{\"tasks.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/api/tasks.js                                                                           //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\nexports.Tasks = undefined;                                                                        //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 1\n                                                                                                  //\nvar _mongo = require('meteor/mongo');                                                             // 2\n                                                                                                  //\nvar _check = require('meteor/check');                                                             // 3\n                                                                                                  //\nvar Tasks = exports.Tasks = new _mongo.Mongo.Collection('tasks');                                 // 5\n                                                                                                  //\nif (_meteor.Meteor.isServer) {                                                                    // 7\n  // This code only runs on the server                                                            //\n  _meteor.Meteor.publish('tasks', function () {                                                   // 9\n    function tasksPublication() {                                                                 // 9\n      return Tasks.find();                                                                        // 10\n    }                                                                                             //\n                                                                                                  //\n    return tasksPublication;                                                                      //\n  }());                                                                                           //\n}                                                                                                 //\n                                                                                                  //\n_meteor.Meteor.methods({                                                                          // 14\n  'tasks.insert': function () {                                                                   // 15\n    function tasksInsert(text) {                                                                  //\n      (0, _check.check)(text, String);                                                            // 16\n                                                                                                  //\n      // Make sure the user is logged in before inserting a task                                  //\n      if (!_meteor.Meteor.userId()) {                                                             // 15\n        throw new _meteor.Meteor.Error('not-authorized');                                         // 20\n      }                                                                                           //\n                                                                                                  //\n      Tasks.insert({                                                                              // 23\n        text: text,                                                                               // 24\n        createdAt: new Date(),                                                                    // 25\n        owner: _meteor.Meteor.userId(),                                                           // 26\n        username: _meteor.Meteor.user().username                                                  // 27\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return tasksInsert;                                                                           //\n  }(),                                                                                            //\n  'tasks.remove': function () {                                                                   // 30\n    function tasksRemove(taskId) {                                                                //\n      (0, _check.check)(taskId, String);                                                          // 31\n                                                                                                  //\n      Tasks.remove(taskId);                                                                       // 33\n    }                                                                                             //\n                                                                                                  //\n    return tasksRemove;                                                                           //\n  }(),                                                                                            //\n  'tasks.setChecked': function () {                                                               // 35\n    function tasksSetChecked(taskId, setChecked) {                                                //\n      (0, _check.check)(taskId, String);                                                          // 36\n      (0, _check.check)(setChecked, Boolean);                                                     // 37\n                                                                                                  //\n      Tasks.update(taskId, { $set: { checked: setChecked } });                                    // 39\n    }                                                                                             //\n                                                                                                  //\n    return tasksSetChecked;                                                                       //\n  }(),                                                                                            //\n  'tasks.setPrivate': function () {                                                               // 41\n    function tasksSetPrivate(taskId, setToPrivate) {                                              //\n      (0, _check.check)(taskId, String);                                                          // 42\n      (0, _check.check)(setToPrivate, Boolean);                                                   // 43\n                                                                                                  //\n      var task = Tasks.findOne(taskId);                                                           // 45\n                                                                                                  //\n      // Make sure only the task owner can make a task private                                    //\n      if (task.owner !== _meteor.Meteor.userId()) {                                               // 41\n        throw new _meteor.Meteor.Error('not-authorized');                                         // 49\n      }                                                                                           //\n                                                                                                  //\n      Tasks.update(taskId, { $set: { 'private': setToPrivate } });                                // 52\n    }                                                                                             //\n                                                                                                  //\n    return tasksSetPrivate;                                                                       //\n  }()                                                                                             //\n});                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"startup\":{\"accounts-config.js\":[\"meteor/accounts-base\",function(require){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/startup/accounts-config.js                                                             //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nvar _accountsBase = require('meteor/accounts-base');                                              // 1\n                                                                                                  //\n_accountsBase.Accounts.ui.config({                                                                // 3\n  passwordSignupFields: 'USERNAME_ONLY'                                                           // 4\n});                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"ui\":{\"AccountsUIWrapper.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"react-dom\",\"meteor/templating\",\"meteor/blaze\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/ui/AccountsUIWrapper.jsx                                                               //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\n                                                                                                  //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                           //\n                                                                                                  //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                  //\n                                                                                                  //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');     //\n                                                                                                  //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);            //\n                                                                                                  //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                       //\n                                                                                                  //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                              //\n                                                                                                  //\nvar _react = require('react');                                                                    // 1\n                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                     //\n                                                                                                  //\nvar _reactDom = require('react-dom');                                                             // 2\n                                                                                                  //\nvar _reactDom2 = _interopRequireDefault(_reactDom);                                               //\n                                                                                                  //\nvar _templating = require('meteor/templating');                                                   // 3\n                                                                                                  //\nvar _blaze = require('meteor/blaze');                                                             // 4\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n                                                                                                  //\nvar AccountsUIWrapper = function (_Component) {                                                   //\n  (0, _inherits3['default'])(AccountsUIWrapper, _Component);                                      //\n                                                                                                  //\n  function AccountsUIWrapper() {                                                                  //\n    (0, _classCallCheck3['default'])(this, AccountsUIWrapper);                                    //\n    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));  //\n  }                                                                                               //\n                                                                                                  //\n  AccountsUIWrapper.prototype.componentDidMount = function () {                                   //\n    function componentDidMount() {                                                                //\n      // Use Meteor Blaze to render login buttons                                                 //\n      this.view = _blaze.Blaze.render(_templating.Template.loginButtons, _reactDom2['default'].findDOMNode(this.refs.container));\n    }                                                                                             //\n                                                                                                  //\n    return componentDidMount;                                                                     //\n  }();                                                                                            //\n                                                                                                  //\n  AccountsUIWrapper.prototype.componentWillUnmount = function () {                                // 6\n    function componentWillUnmount() {                                                             //\n      // Clean up Blaze view                                                                      //\n      _blaze.Blaze.remove(this.view);                                                             // 14\n    }                                                                                             //\n                                                                                                  //\n    return componentWillUnmount;                                                                  //\n  }();                                                                                            //\n                                                                                                  //\n  AccountsUIWrapper.prototype.render = function () {                                              // 6\n    function render() {                                                                           //\n      // Just render a placeholder container that will be filled in                               //\n      return _react2['default'].createElement('span', { ref: 'container' });                      // 18\n    }                                                                                             //\n                                                                                                  //\n    return render;                                                                                //\n  }();                                                                                            //\n                                                                                                  //\n  return AccountsUIWrapper;                                                                       //\n}(_react.Component);                                                                              //\n                                                                                                  //\nexports['default'] = AccountsUIWrapper;                                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"App.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"react-dom\",\"meteor/meteor\",\"meteor/react-meteor-data\",\"../api/tasks.js\",\"./Task.jsx\",\"./AccountsUIWrapper.jsx\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/ui/App.jsx                                                                             //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\n                                                                                                  //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                           //\n                                                                                                  //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                  //\n                                                                                                  //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');     //\n                                                                                                  //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);            //\n                                                                                                  //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                       //\n                                                                                                  //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                              //\n                                                                                                  //\nvar _react = require('react');                                                                    // 1\n                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                     //\n                                                                                                  //\nvar _reactDom = require('react-dom');                                                             // 2\n                                                                                                  //\nvar _reactDom2 = _interopRequireDefault(_reactDom);                                               //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 3\n                                                                                                  //\nvar _reactMeteorData = require('meteor/react-meteor-data');                                       // 4\n                                                                                                  //\nvar _tasks = require('../api/tasks.js');                                                          // 6\n                                                                                                  //\nvar _Task = require('./Task.jsx');                                                                // 8\n                                                                                                  //\nvar _Task2 = _interopRequireDefault(_Task);                                                       //\n                                                                                                  //\nvar _AccountsUIWrapper = require('./AccountsUIWrapper.jsx');                                      // 9\n                                                                                                  //\nvar _AccountsUIWrapper2 = _interopRequireDefault(_AccountsUIWrapper);                             //\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n                                                                                                  //\n// App component - represents the whole app                                                       //\n                                                                                                  //\nvar App = function (_Component) {                                                                 //\n  (0, _inherits3['default'])(App, _Component);                                                    //\n                                                                                                  //\n  function App(props) {                                                                           // 13\n    (0, _classCallCheck3['default'])(this, App);                                                  //\n                                                                                                  //\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _Component.call(this, props));  //\n                                                                                                  //\n    _this.state = {                                                                               // 16\n      hideCompleted: false                                                                        // 17\n    };                                                                                            //\n    return _this;                                                                                 //\n  }                                                                                               //\n                                                                                                  //\n  App.prototype.handleSubmit = function () {                                                      // 12\n    function handleSubmit(event) {                                                                //\n      event.preventDefault();                                                                     // 21\n                                                                                                  //\n      // Find the text field via the React ref                                                    //\n      var text = _reactDom2['default'].findDOMNode(this.refs.textInput).value.trim();             // 20\n                                                                                                  //\n      _tasks.Tasks.insert({                                                                       // 26\n        text: text,                                                                               // 27\n        createdAt: new Date(), // current time                                                    // 28\n        owner: _meteor.Meteor.userId(), // _id of logged in user                                  // 29\n        username: _meteor.Meteor.user().username });                                              // 30\n                                                                                                  //\n      // username of logged in user                                                               //\n      _meteor.Meteor.call('tasks.insert', text);                                                  // 33\n                                                                                                  //\n      // Clear form                                                                               //\n      _reactDom2['default'].findDOMNode(this.refs.textInput).value = '';                          // 20\n    }                                                                                             //\n                                                                                                  //\n    return handleSubmit;                                                                          //\n  }();                                                                                            //\n                                                                                                  //\n  App.prototype.toggleHideCompleted = function () {                                               // 12\n    function toggleHideCompleted() {                                                              //\n      this.setState({                                                                             // 40\n        hideCompleted: !this.state.hideCompleted                                                  // 41\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return toggleHideCompleted;                                                                   //\n  }();                                                                                            //\n                                                                                                  //\n  App.prototype.renderTasks = function () {                                                       // 12\n    function renderTasks() {                                                                      //\n      var _this2 = this;                                                                          //\n                                                                                                  //\n      var filteredTasks = this.props.tasks;                                                       // 46\n      if (this.state.hideCompleted) {                                                             // 47\n        filteredTasks = filteredTasks.filter(function (task) {                                    // 48\n          return !task.checked;                                                                   //\n        });                                                                                       //\n      }                                                                                           //\n      return filteredTasks.map(function (task) {                                                  // 50\n        var currentUserId = _this2.props.currentUser && _this2.props.currentUser._id;             // 51\n        var showPrivateButton = task.owner === currentUserId;                                     // 52\n                                                                                                  //\n        return _react2['default'].createElement(_Task2['default'], {                              // 54\n          key: task._id,                                                                          // 56\n          task: task,                                                                             // 57\n          showPrivateButton: showPrivateButton                                                    // 58\n        });                                                                                       //\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return renderTasks;                                                                           //\n  }();                                                                                            //\n                                                                                                  //\n  App.prototype.render = function () {                                                            // 12\n    function render() {                                                                           //\n                                                                                                  //\n      return _react2['default'].createElement(                                                    // 66\n        'div',                                                                                    //\n        { className: 'container' },                                                               //\n        _react2['default'].createElement(                                                         //\n          'header',                                                                               //\n          null,                                                                                   //\n          _react2['default'].createElement(                                                       //\n            'h1',                                                                                 //\n            null,                                                                                 //\n            'Todo List (',                                                                        //\n            this.props.incompleteCount,                                                           //\n            ')'                                                                                   //\n          ),                                                                                      //\n          _react2['default'].createElement(                                                       //\n            'label',                                                                              //\n            { className: 'hide-completed' },                                                      //\n            _react2['default'].createElement('input', {                                           //\n              type: 'checkbox',                                                                   // 73\n              readOnly: true,                                                                     // 74\n              checked: this.state.hideCompleted,                                                  // 75\n              onClick: this.toggleHideCompleted.bind(this)                                        // 76\n            }),                                                                                   //\n            'Hide Completed Tasks'                                                                //\n          ),                                                                                      //\n          _react2['default'].createElement(_AccountsUIWrapper2['default'], null),                 //\n          this.props.currentUser ? _react2['default'].createElement(                              //\n            'form',                                                                               //\n            { className: 'new-task', onSubmit: this.handleSubmit.bind(this) },                    //\n            _react2['default'].createElement('input', {                                           //\n              type: 'text',                                                                       // 86\n              ref: 'textInput',                                                                   // 87\n              placeholder: 'Type to add new tasks'                                                // 88\n            })                                                                                    //\n          ) : ''                                                                                  //\n        ),                                                                                        //\n        _react2['default'].createElement(                                                         //\n          'ul',                                                                                   //\n          null,                                                                                   //\n          this.renderTasks()                                                                      //\n        )                                                                                         //\n      );                                                                                          //\n    }                                                                                             //\n                                                                                                  //\n    return render;                                                                                //\n  }();                                                                                            //\n                                                                                                  //\n  return App;                                                                                     //\n}(_react.Component);                                                                              //\n                                                                                                  //\nApp.propTypes = {                                                                                 // 102\n  tasks: _react.PropTypes.array.isRequired,                                                       // 103\n  incompleteCount: _react.PropTypes.number.isRequired,                                            // 104\n  currentUser: _react.PropTypes.object                                                            // 105\n                                                                                                  //\n};                                                                                                //\n                                                                                                  //\nexports['default'] = (0, _reactMeteorData.createContainer)(function () {                          //\n  _meteor.Meteor.subscribe('tasks');                                                              // 110\n                                                                                                  //\n  return {                                                                                        // 112\n    tasks: _tasks.Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),                            // 113\n    incompleteCount: _tasks.Tasks.find({ checked: { $ne: true } }).count(),                       // 114\n    currentUser: _meteor.Meteor.user()                                                            // 115\n  };                                                                                              //\n}, App);                                                                                          //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Task.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"meteor/meteor\",\"../api/tasks.js\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/ui/Task.jsx                                                                            //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\n                                                                                                  //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                           //\n                                                                                                  //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                  //\n                                                                                                  //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');     //\n                                                                                                  //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);            //\n                                                                                                  //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                       //\n                                                                                                  //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                              //\n                                                                                                  //\nvar _react = require('react');                                                                    // 1\n                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                     //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 2\n                                                                                                  //\nvar _tasks = require('../api/tasks.js');                                                          // 3\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n                                                                                                  //\n// Task component - represents a single todo item                                                 //\n                                                                                                  //\nvar Task = function (_Component) {                                                                //\n  (0, _inherits3['default'])(Task, _Component);                                                   //\n                                                                                                  //\n  function Task() {                                                                               //\n    (0, _classCallCheck3['default'])(this, Task);                                                 //\n    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));  //\n  }                                                                                               //\n                                                                                                  //\n  Task.prototype.toggleChecked = function () {                                                    //\n    function toggleChecked() {                                                                    //\n      // Set the checked property to the opposite of its current value                            //\n      _tasks.Tasks.update(this.props.task._id, {                                                  // 9\n        $set: { checked: !this.props.task.checked }                                               // 10\n      });                                                                                         //\n      _meteor.Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);     // 12\n    }                                                                                             //\n                                                                                                  //\n    return toggleChecked;                                                                         //\n  }();                                                                                            //\n                                                                                                  //\n  Task.prototype.deleteThisTask = function () {                                                   // 6\n    function deleteThisTask() {                                                                   //\n      _tasks.Tasks.remove(this.props.task._id);                                                   // 16\n      _meteor.Meteor.call('tasks.remove', this.props.task._id);                                   // 17\n    }                                                                                             //\n                                                                                                  //\n    return deleteThisTask;                                                                        //\n  }();                                                                                            //\n                                                                                                  //\n  Task.prototype.togglePrivate = function () {                                                    // 6\n    function togglePrivate() {                                                                    //\n      _meteor.Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task['private']);  // 21\n    }                                                                                             //\n                                                                                                  //\n    return togglePrivate;                                                                         //\n  }();                                                                                            //\n                                                                                                  //\n  Task.prototype.render = function () {                                                           // 6\n    function render() {                                                                           //\n      // Give tasks a different className when they are checked off,                              //\n      // so that we can style them nicely in CSS                                                  //\n      var taskClassName = this.props.task.checked ? 'checked' : '';                               // 28\n                                                                                                  //\n      return _react2['default'].createElement(                                                    // 30\n        'li',                                                                                     //\n        { className: taskClassName },                                                             //\n        _react2['default'].createElement(                                                         //\n          'button',                                                                               //\n          { className: 'delete', onClick: this.deleteThisTask.bind(this) },                       //\n          '×'                                                                                     //\n        ),                                                                                        //\n        _react2['default'].createElement('input', {                                               //\n          type: 'checkbox',                                                                       // 36\n          readOnly: true,                                                                         // 37\n          checked: this.props.task.checked,                                                       // 38\n          onClick: this.toggleChecked.bind(this)                                                  // 39\n        }),                                                                                       //\n        this.props.showPrivateButton ? _react2['default'].createElement(                          //\n          'button',                                                                               //\n          { className: 'toggle-private', onClick: this.togglePrivate.bind(this) },                //\n          this.props.task['private'] ? 'Private' : 'Public'                                       //\n        ) : '',                                                                                   //\n        _react2['default'].createElement(                                                         //\n          'span',                                                                                 //\n          { className: 'text' },                                                                  //\n          _react2['default'].createElement(                                                       //\n            'strong',                                                                             //\n            null,                                                                                 //\n            this.props.task.username                                                              //\n          ),                                                                                      //\n          ': ',                                                                                   //\n          this.props.task.text                                                                    //\n        )                                                                                         //\n      );                                                                                          //\n    }                                                                                             //\n                                                                                                  //\n    return render;                                                                                //\n  }();                                                                                            //\n                                                                                                  //\n  return Task;                                                                                    //\n}(_react.Component);                                                                              //\n                                                                                                  //\nexports['default'] = Task;                                                                        //\n                                                                                                  //\n                                                                                                  //\nTask.propTypes = {                                                                                // 56\n  // This component gets the task to display through a React prop.                                //\n  // We can use propTypes to indicate it is required                                              //\n  task: _react.PropTypes.object.isRequired,                                                       // 59\n  showPrivateButton: _react2['default'].PropTypes.bool.isRequired                                 // 60\n};                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}},{\"extensions\":[\".js\",\".json\",\".html\",\".jsx\",\".css\"]});\nrequire(\"./client/main.html\");\nrequire(\"./client/main.jsx\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/main.jsx","/imports/api/tasks.js","/imports/startup/accounts-config.js","/imports/ui/AccountsUIWrapper.jsx","/imports/ui/App.jsx","/imports/ui/Task.jsx"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { render } from 'react-dom';\r\n \r\nimport '../imports/startup/accounts-config.js';\r\nimport App from '../imports/ui/App.jsx';\r\n \r\nMeteor.startup(() => {\r\n  render(<App />, document.getElementById('render-target'));\r\n});\r\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n \nexport const Tasks = new Mongo.Collection('tasks');\t \n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('tasks', function tasksPublication() {\n    return Tasks.find();\n  });\n}\n \nMeteor.methods({\n  'tasks.insert'(text) {\n    check(text, String);\n \n    // Make sure the user is logged in before inserting a task\n    if (! Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n \n    Tasks.insert({\n      text,\n      createdAt: new Date(),\n      owner: Meteor.userId(),\n      username: Meteor.user().username,\n    });\n  },\n  'tasks.remove'(taskId) {\n    check(taskId, String);\n \n    Tasks.remove(taskId);\n  },\n  'tasks.setChecked'(taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n \n    Tasks.update(taskId, { $set: { checked: setChecked } });\n  },\n    'tasks.setPrivate'(taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n \n    const task = Tasks.findOne(taskId);\n \n    // Make sure only the task owner can make a task private\n    if (task.owner !== Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n \n    Tasks.update(taskId, { $set: { private: setToPrivate } });\n  },\n});\n","import { Accounts } from 'meteor/accounts-base';\r\n \r\nAccounts.ui.config({\r\n  passwordSignupFields: 'USERNAME_ONLY',\r\n});","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Template } from 'meteor/templating';\r\nimport { Blaze } from 'meteor/blaze';\r\n \r\nexport default class AccountsUIWrapper extends Component {\r\n  componentDidMount() {\r\n    // Use Meteor Blaze to render login buttons\r\n    this.view = Blaze.render(Template.loginButtons,\r\n      ReactDOM.findDOMNode(this.refs.container));\r\n  }\r\n  componentWillUnmount() {\r\n    // Clean up Blaze view\r\n    Blaze.remove(this.view);\r\n  }\r\n  render() {\r\n    // Just render a placeholder container that will be filled in\r\n    return <span ref=\"container\" />;\r\n  }\r\n}","import React, { Component, PropTypes } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { createContainer } from 'meteor/react-meteor-data';\r\n\r\nimport { Tasks } from '../api/tasks.js';\r\n\r\nimport Task from './Task.jsx';\r\nimport AccountsUIWrapper from './AccountsUIWrapper.jsx';\r\n\r\n// App component - represents the whole app\r\nclass App extends Component {\r\n\t constructor(props) {\r\n    super(props);\r\n \r\n    this.state = {\r\n      hideCompleted: false,\r\n    };\r\n  }\r\n \t handleSubmit(event) {\r\n    event.preventDefault();\r\n \r\n    // Find the text field via the React ref\r\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\r\n \r\n    Tasks.insert({\r\n      text,\r\n      createdAt: new Date(), // current time\r\n\t  owner: Meteor.userId(),           // _id of logged in user\r\n      username: Meteor.user().username,  // username of logged in user\r\n    });\r\n\t\r\n      Meteor.call('tasks.insert', text);\r\n  \r\n    // Clear form\r\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\r\n  }\r\n  \r\n   toggleHideCompleted() {\r\n    this.setState({\r\n      hideCompleted: !this.state.hideCompleted,\r\n    });\r\n  }\r\n  \t\r\n  renderTasks() {\r\n\tlet filteredTasks = this.props.tasks;\r\n    if (this.state.hideCompleted) {\r\n      filteredTasks = filteredTasks.filter(task => !task.checked);\r\n    }\r\n   \treturn filteredTasks.map((task) => {\r\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\r\n      const showPrivateButton = task.owner === currentUserId;\r\n\r\n      return (\r\n        <Task\r\n          key={task._id}\r\n          task={task}\r\n          showPrivateButton={showPrivateButton}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n\t  \r\n    return (\r\n      <div className=\"container\">\r\n        <header>\r\n          <h1>Todo List ({this.props.incompleteCount})</h1>\r\n\t\t  \r\n\t\t  <label className=\"hide-completed\">\r\n            <input\r\n              type=\"checkbox\"\r\n              readOnly\r\n              checked={this.state.hideCompleted}\r\n              onClick={this.toggleHideCompleted.bind(this)}\r\n            />\r\n            Hide Completed Tasks\r\n          </label>\r\n\t\t  \r\n \t\t  <AccountsUIWrapper />\r\n\r\n           { this.props.currentUser ?\r\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\r\n              <input\r\n                type=\"text\"\r\n                ref=\"textInput\"\r\n                placeholder=\"Type to add new tasks\"\r\n              />\r\n            </form> : ''\r\n          }\r\n        </header>\r\n\t\t  \r\n         <ul>\r\n          {this.renderTasks()}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  incompleteCount: PropTypes.number.isRequired,\r\n    currentUser: PropTypes.object,\r\n\r\n};\r\n\r\nexport default createContainer(() => {\r\n\tMeteor.subscribe('tasks');\r\n\t\r\n  return {\r\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\r\n\tincompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\r\n\tcurrentUser: Meteor.user(),\r\n  };\r\n}, App);","import React, { Component, PropTypes } from 'react';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { Tasks } from '../api/tasks.js';\r\n\r\n// Task component - represents a single todo item\r\nexport default class Task extends Component {\r\n\t  toggleChecked() {\r\n    // Set the checked property to the opposite of its current value\r\n    Tasks.update(this.props.task._id, {\r\n      $set: { checked: !this.props.task.checked },\r\n    });\r\n\tMeteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\r\n  }\r\n \r\n  deleteThisTask() {\r\n    Tasks.remove(this.props.task._id);\r\n\tMeteor.call('tasks.remove', this.props.task._id);\r\n  }\r\n\t\r\n  togglePrivate() {\r\n    Meteor.call('tasks.setPrivate', this.props.task._id, ! this.props.task.private);\r\n  }\r\n\r\n \r\n  render() {\r\n\t     // Give tasks a different className when they are checked off,\r\n    // so that we can style them nicely in CSS\r\n    const taskClassName = this.props.task.checked ? 'checked' : '';\r\n\t\r\n    return ( <li className={taskClassName}>\r\n        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\r\n          &times;\r\n        </button>\r\n \r\n        <input\r\n          type=\"checkbox\"\r\n          readOnly\r\n          checked={this.props.task.checked}\r\n          onClick={this.toggleChecked.bind(this)}\r\n        />\r\n\t\t\r\n\t\t { this.props.showPrivateButton ? (\r\n          <button className=\"toggle-private\" onClick={this.togglePrivate.bind(this)}>\r\n            { this.props.task.private ? 'Private' : 'Public' }\r\n          </button>\r\n        ) : ''}\r\n \r\n          <span className=\"text\">\r\n          <strong>{this.props.task.username}</strong>: {this.props.task.text}\r\n        </span>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nTask.propTypes = {\r\n  // This component gets the task to display through a React prop.\r\n  // We can use propTypes to indicate it is required\r\n  task: PropTypes.object.isRequired,\r\n  showPrivateButton: React.PropTypes.bool.isRequired,\r\n  };"]}}]