{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"../api/tasks.js","imported":["Tasks"],"specifiers":[{"kind":"named","imported":"Tasks","local":"Tasks"}]}],"exports":{"exported":["Task"],"specifiers":[{"kind":"local","local":"Task","exported":"default"}]}}},"options":{"filename":"/imports/ui/Task.jsx","filenameRelative":"/imports/ui/Task.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/Task.jsx.map","sourceFileName":"/imports/ui/Task.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"Task"},"ignored":false,"code":"exports.__esModule = true;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _tasks = require('../api/tasks.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// Task component - represents a single todo item\n\nvar Task = function (_Component) {\n  (0, _inherits3['default'])(Task, _Component);\n\n  function Task() {\n    (0, _classCallCheck3['default'])(this, Task);\n    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));\n  }\n\n  Task.prototype.toggleChecked = function () {\n    function toggleChecked() {\n      // Set the checked property to the opposite of its current value\n      _tasks.Tasks.update(this.props.task._id, {\n        $set: { checked: !this.props.task.checked }\n      });\n    }\n\n    return toggleChecked;\n  }();\n\n  Task.prototype.deleteThisTask = function () {\n    function deleteThisTask() {\n      _tasks.Tasks.remove(this.props.task._id);\n    }\n\n    return deleteThisTask;\n  }();\n\n  Task.prototype.render = function () {\n    function render() {\n      return _react2['default'].createElement(\n        'li',\n        null,\n        this.props.task.text\n      );\n    }\n\n    return render;\n  }();\n\n  return Task;\n}(_react.Component);\n\nexports['default'] = Task;\n\n\nTask.propTypes = {\n  // This component gets the task to display through a React prop.\n  // We can use propTypes to indicate it is required\n  task: _react.PropTypes.object.isRequired\n};","ast":null,"map":{"version":3,"sources":["/imports/ui/Task.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;AAEC;;;;;;IAGoB;;;;;;;;iBAClB;6BAAgB;;AAEf,mBAAM,MAAN,CAAa,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,EAAqB;AAChC,cAAM,EAAE,SAAS,CAAC,KAAK,KAAL,CAAW,IAAX,CAAgB,OAAhB,EAAlB;OADF,EAFe;;;;;;AADE,iBAQnB;8BAAiB;AACf,mBAAM,MAAN,CAAa,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAb,CADe;;;;;;AARE,iBAYnB;sBAAS;AACP,aACE;;;QAAK,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;OADP,CADO;;;;;;SAZU;;;;;;AAmBrB,KAAK,SAAL,GAAiB;;;AAGf,QAAM,iBAAU,MAAV,CAAiB,UAAjB;CAHR","file":"/imports/ui/Task.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n \r\n import { Tasks } from '../api/tasks.js';\r\n\r\n// Task component - represents a single todo item\r\nexport default class Task extends Component {\r\n\t  toggleChecked() {\r\n    // Set the checked property to the opposite of its current value\r\n    Tasks.update(this.props.task._id, {\r\n      $set: { checked: !this.props.task.checked },\r\n    });\r\n  }\r\n \r\n  deleteThisTask() {\r\n    Tasks.remove(this.props.task._id);\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <li>{this.props.task.text}</li>\r\n    );\r\n  }\r\n}\r\n \r\nTask.propTypes = {\r\n  // This component gets the task to display through a React prop.\r\n  // We can use propTypes to indicate it is required\r\n  task: PropTypes.object.isRequired,\r\n};"]},"hash":"dff0c6d6de188fd4c0a30405b2c74c1994a81a57"}
